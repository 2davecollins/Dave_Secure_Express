<h1>Stores Located Near You</h1>
<br />

<div width="100%" height="auto">
	<div id="mapid" style="width: 80vw; height: 70vh;"></div>
</div>

<br />
<a class="btn btn-info" href="/location/add_location" role="button">Admin</a>
<div id="loc"></div>
<input type="hidden" id="loginid" value="<%= typeof user != 'undefined' ? user._id: ' ' %>">

<script>
	//Use API to get markers for stores


	const x = document.getElementById('loc');
	function getLocation() {
		console.log('get geolocation');
		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(showPosition);
		} else {
			x.innerHTML = 'Geolocation is not supported by this browser.';
		}
	}
	getLocation();

	function showPosition(position) {
		console.log('showing position');
		x.innerHTML = 'Latitude: ' + position.coords.latitude + '<br>Longitude: ' + position.coords.longitude;
	}
	const id = document.getElementById('loginid').value
	
	fetch(`/api/vi/users/${id}`)
		.then(response => {
			return response.json();
		})
		.then(result => {			
			if (result.data.length > 0) {				
				result.data.forEach(m => {
					let umks = m.location.coordinates;
					let uname = m.name;
					addHomeMarker(umks, uname);					
				});
			}else{
				const umk =result.data.location.coordinates;
				const linname = result.data.name;
				addHomeMarker(umk, linname);
				addCircle(umk, dist, distmsg);
	
			}
		});

	fetch('/api/vi/stores')
		.then(response => {
			return response.json();
		})
		.then(result => {
			if (result.data.length > 0) {				
				result.data.forEach(m => {
					let mks = m.location.coordinates;
					let sname = m.name;
					addMarker(mks, sname);					
				});
			}
		});
	const home = [53.319517, -6.3091073];
	const center = [53.291, -6.4382];
	const msg = '<b>My Home</b><br />Starting Point';
	const dist = 2000;
	const distmsg = '2k';

	const mymap = L.map('mapid', {
		center: home,
		minZoom: 3,
		zoom: 13,
		dragging: false,
		doubleClickZoom: false,
		scrollWheelZoom: false,
	});

	//addHomeMarker(home, msg);
	createSecureMap(center);
	
	function createSecureMap(cntr) {
		const osms = new L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
		}).addTo(mymap);
	}

	function addCircle(ctnr, dist, msg) {
		L.circle(ctnr, dist, {
			color: 'red',
			fillColor: '#f03',
			fillOpacity: 0.05,
		})
			.addTo(mymap)
			.bindPopup(msg);
	}

	function addMarker(m, storename) {
		L.marker(m)
			.addTo(mymap)
			.bindPopup(storename);
	}

	function addHomeMarker(m, msg) {
		const greenIcon = new L.Icon({
			iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
			shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
			iconSize: [25, 41],
			iconAnchor: [12, 41],
			popupAnchor: [1, -34],
			shadowSize: [41, 41],
		});
		L.marker(m, { icon: greenIcon })
			.addTo(mymap)
			.bindPopup(msg)
			.openPopup();
	}
</script>
